<?php
/**
 * Created by PhpStorm.
 * User: Баранов Владимир <phpnt@yandex.ru>
 * Date: 18.08.2018
 * Time: 19:28
 */

namespace common\models\forms;

use Yii;
use common\models\extend\TemplateExtend;
use yii\base\ErrorException;
use yii\db\StaleObjectException;

class TemplateForm extends TemplateExtend
{
    public function rules()
    {
        $items = TemplateExtend::rules();
        $items[] = [['name', 'description', 'mark', 'status', 'i18n'], 'required'];
        $items[] = [['name'], 'string', 'on' => ['create-template', 'update-template']];
        $items[] = [['name'], 'trim', 'on' => ['create-folder', 'update-folder', 'create-document', 'update-document']];

        return $items;
    }

    public function attributeLabels()
    {
        $items = TemplateExtend::attributeLabels();

        return $items;
    }

    /**
     * Удаления шаблона
     *
     * @return boolean
     * @throws ErrorException
     */
    public function beforeDelete()
    {
        parent::beforeDelete(); // TODO: Change the autogenerated stub

        foreach ($this->fields as $field) {
            try {
                $field->delete();
            } catch (StaleObjectException $e) {
                Yii::$app->errorHandler->logException($e);
                throw new ErrorException($e->getMessage());
            } catch (\Throwable $e) {
                Yii::$app->errorHandler->logException($e);
                throw new ErrorException($e->getMessage());
            }
        }

        return true;
    }
}